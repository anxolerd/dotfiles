---  # vim: set ft=yaml.ansible :
- name: Enable and start services
  listen: ensure-services-started
  service:
    name: "{{ item.service }}"
    enabled: true
    runlevel: default
    state: started
  register: start_srv_r
  failed_when: "start_srv_r.failed and 'Service is in unknown state' not in start_srv_r.msg"
  when: >-
    (
      item.provided_by in ansible_facts.packages
      and item.service not in disabled_services
    )
    or ansible_facts.packages is not defined
  loop: "{{ services_safe_restart + services_unsafe_restart }}"
  loop_control:
    label: "{{ item.service }}"

- name: Reload services
  listen: ensure-services-reloaded
  service:
    name: "{{ item.service }}"
    state: restarted
  register: start_srv_r
  failed_when: "start_srv_r.failed and 'Service is in unknown state' not in start_srv_r.msg"
  when: "{{ item.provided_by in ansible_facts.packages or ansible_facts.packages is not defined }}"
  loop: "{{ services_safe_restart }}"
  loop_control:
    label: "{{ item.service }}"

- name: Reload and apply udev rules from configs
  listen: update-udev-rules
  shell: udevadm control --reload-rules && udevadm trigger
