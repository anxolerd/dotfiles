---  # vim: set ft=yaml.ansible :
- name: Configure helper aliases for zoxide
  when: "'zoxide' in ansible_facts.packages"
  block:

    - name: Ensure zoxide is added to the shell
      ansible.builtin.lineinfile:
        line: 'eval "$(zoxide init bash)"'
        dest: ~/.bashrc
        create: true
        owner: anxolerd
        group: anxolerd
        mode: "0640"

    - name: Create bash function for zoxide
      ansible.builtin.blockinfile:
        append_newline: true
        prepend_newline: true
        block: |
          alias cd="zd"
          zd() {
            if [ $# -eq 0 ]; then
              builtin cd ~ && return
            elif [ -d "$1" ]; then
              builtin cd "$1"
            else
              z "$@" && printf "\U000F17A9 " && pwd || echo "Error: Directory not found"
            fi
          }
        dest: ~/.bashrc
        create: true
        owner: anxolerd
        group: anxolerd
        mode: "0640"


- name: Use fzf for completion and search
  ansible.builtin.lineinfile:
    line: "[ -f {{ item.file | quote }} ] && . {{ item.file }}"
    dest: ~/.bashrc
    create: true
    owner: anxolerd
    group: anxolerd
    mode: "0640"
  with_items:
    - file: /usr/share/fzf/key-bindings.bash
      label: key bindings
    - file: /usr/share/bash-completion/completions/fzf
      label: key bindings
  loop_control:
    label: "{{ item.label }}"
  when: "'fzf' in ansible_facts.packages"

- name: Use eza instead of ls
  ansible.builtin.lineinfile:
    line: "alias {{ item.alias }}='{{ item.command }}'"
    dest: ~/.bashrc
    create: true
    owner: anxolerd
    group: anxolerd
    mode: "0640"
  with_items:
    - alias: ls
      command: "eza --group-directories-first"
    - alias: ll
      command: "eza --group-directories-first -alF"
    - alias: la
      command: "eza --group-directories-first -a"
    - alias: tree
      command: "eza --tree"
    - alias: lt
      command: "eza --tree --level=2 --long --icons --git"
  when: "'eza' in ansible_facts.packages"

- name: Configure bash_history options
  ansible.builtin.lineinfile:
    line: "export {{ option.name }}={{ option.value }}"
    dest: ~/.bashrc
    create: true
    owner: anxolerd
    group: anxolerd
    mode: "0640"
  with_items:
    - name: HISTCONTROL
      value: "ignoreboth:erasedups"
    - name: HISTSIZE
      value: "10000"
  loop_control:
    loop_var: option
    label: "{{ option.name }}"

- name: Hook direnv into shell
  ansible.builtin.lineinfile:
    line: 'eval "$(direnv hook bash)"'
    dest: ~/.bashrc
    state: present
    create: true
    owner: anxolerd
    group: anxolerd
    mode: "0640"
  when: "'direnv' in ansible_facts.packages"

- name: Use custom scripts in ~/.local/bin
  ansible.builtin.lineinfile:
    line: >-
      [ -d "${HOME}/.local/bin" ] && export PATH="${HOME}/.local/bin:${PATH}"
    dest: ~/.bashrc
    create: true
    owner: anxolerd
    group: anxolerd
    mode: "0640"
